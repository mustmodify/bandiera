services:
  # A Docker web service
  - type: web
    name: apf-feature-flag-app
    env: docker
    repo: https://github.com/mustmodify/bandiera
    plan: starter
    branch: main
    rootDir: /
    #dockerCommand: ./webdis.sh # optional (defaults to Dockerfile command)
    #numInstances: 3 # optional (defaults to 1)
    healthCheckPath: /
    # envVars:
    #   - key: REDIS_HOST
    #     fromService:
    #       type: redis
    #       name: lightning
    #       property: host # available properties are listed below
    #   - key: REDIS_PORT
    #     fromService:
    #       type: redis
    #       name: lightning
    #       property: port
    #   - fromGroup: conc-settings
  # A Ruby web service
  #- type: web
  #  name: sinatra
  #  env: ruby
  #  repo: https://github.com/renderinc/sinatra-example.git
  #  scaling:
  #    minInstances: 1
  #    maxInstances: 3
  #    targetMemoryPercent: 60 # optional if targetCPUPercent is set
  #    targetCPUPercent: 60 # optional if targetMemory is set
  #  buildCommand: bundle install
  #  startCommand: bundle exec ruby main.rb
  #  domains:
  #    - test0.render.com
  #    - test1.render.com
  #  envVars:
  #    - key: STRIPE_API_KEY
  #      value: Z2V0IG91dHRhIGhlcmUhCg
  #    - key: DB_URL
  #      fromDatabase:
  #        name: elephant
  #        property: connectionString
  #    - key: MINIO_ROOT_PASSWORD
  #      fromService:
  #        type: pserv
  #        name: minio
  #        envVarKey: MINIO_ROOT_PASSWORD

  #  autoDeploy: false # optional

# envVarGroups:
#   - name: conc-settings
#     envVars:
#       - key: CONCURRENCY
#         value: 2
#       - key: SECRET
#         generateValue: true
#       - key: USER_PROVIDED_SECRET
#         sync: false
#   - name: stripe
#     envVars:
#       - key: STRIPE_API_URL
#         value: https://api.stripe.com/v2
